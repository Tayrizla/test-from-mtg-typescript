{"version":3,"sources":["components/DropDowns/DropDowns.module.css","components/Navbar/Navbar.module.css","transitions/transition.module.css","components/Modal/Alert.module.css","pages/HomePage/HomePage.module.css","components/Layout/Layout.module.css","pages/TestPage/TestPage.module.css","components/FileContents/FileContents.module.css","pages/ModalPage/ModalPage.module.css","components/Modal/Modal.module.css","components/ErrorBoundary/ErrorBoundary.tsx","redux/reducers/filesReducer.ts","redux/actions/actionTypes.ts","redux/reducers/modalReducer.ts","redux/reducers/rootReducer.tsx","redux/store.ts","pages/HomePage/HomePage.tsx","components/Navbar/Navbar.tsx","components/NotFound/NotFound.tsx","pages/LoginPage/Login.tsx","pages/RegisterPage/Register.tsx","components/FileContents/FileContents.tsx","redux/actions/filesActions.ts","components/DropDowns/DropDowns.tsx","pages/TestPage/TestPage.tsx","components/Modal/Modal.tsx","components/Modal/Alert.tsx","pages/ModalPage/ModalPage.tsx","redux/actions/modalActions.ts","components/Layout/Layout.tsx","App.tsx","index.tsx"],"names":["module","exports","ErrorBoundary","state","hasError","this","setState","props","children","Component","initialState","files","loading","error","activeFile","file","filesReducer","action","type","isOpen","alert","modalReducer","isShown","rootReducer","combineReducers","modal","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","HomePage","className","styles","to","Navbar","logo","NotFound","Login","Register","FileContents","contents","FAKE_DATABASE","id","name","setLoadingContents","getContentsSuccess","getContentsError","setFiles","setLoadingFiles","getFilesError","DropDowns","getContents","match","params","prevProps","url","container","dropdown","map","key","connect","fileName","dispatch","a","find","setTimeout","message","TestPage","getFiles","path","render","routeProps","Modal","modalOkClickHandler","modalDismissClickHandler","onClick","Alert","onCloseAlert","ModalPage","setModal","setAlert","CSSTransition","in","timeout","classNames","transition","unmountOnExit","mountOnEnter","Layout","exact","component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4e1ece5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DropDowns_container__5_Mpc\",\"show-btn\":\"DropDowns_show-btn__1OZ0E\",\"dropdown\":\"DropDowns_dropdown__3HqfK\",\"dropdown-child\":\"DropDowns_dropdown-child__PKq2R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__3M6jl\",\"logo\":\"Navbar_logo__2FP3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transition_enter__1U7Ld\",\"enterActive\":\"transition_enterActive__L650C\",\"exit\":\"transition_exit__2AZKJ\",\"exitActive\":\"transition_exitActive__12M_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"Alert_Alert__1AMus\",\"close-btn\":\"Alert_close-btn__1AOJV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePage\":\"HomePage_HomePage__3EnnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__32m55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TestPage\":\"TestPage_TestPage__5xT8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contents\":\"FileContents_contents__2XG2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalPage\":\"ModalPage_ModalPage__aTqrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3gfTE\"};","import React, { Component, Fragment } from \"react\";\r\n\r\ntype State = {\r\n  hasError: boolean\r\n}\r\n\r\nexport default class ErrorBoundary extends Component<{}, State> {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Fragment>\r\n          <h1>Что-то пошло не так</h1>\r\n          <p>Попробуйте еще раз - перейдите на домашнюю страницу</p>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { FileActionTypes } from './../actions/filesActions';\r\nimport { FileType, ActiveFileType } from './../../types';\r\nimport {\r\n  SET_FILES,\r\n  SET_LOADING_FILES,\r\n  GET_FILES_ERROR,\r\n  SET_LOADING_CONTENTS,\r\n  GET_CONTENTS_SUCCESS,\r\n  GET_CONTENTS_ERROR,\r\n} from \"../actions/actionTypes\";\r\n\r\n\r\n\r\nconst initialState = {\r\n  files: [] as Array<FileType>,\r\n  loading: true,\r\n  error: null as any,\r\n  activeFile: {\r\n    loading: false,\r\n    error: null,\r\n    file: null,\r\n  } as ActiveFileType,\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst filesReducer = (state = initialState, action: FileActionTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case SET_FILES:\r\n      return { ...state, files: action.files, loading: false, error: null };\r\n    case SET_LOADING_FILES:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_FILES_ERROR:\r\n      return { ...state, loading: false, error: action.error };\r\n    case SET_LOADING_CONTENTS:\r\n      return {\r\n        ...state,\r\n        activeFile: { ...state.activeFile, loading: true, error: null },\r\n      };\r\n    case GET_CONTENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        activeFile: {\r\n          ...state.activeFile,\r\n          file: action.file,\r\n          loading: false,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_CONTENTS_ERROR:\r\n      return {\r\n        ...state,\r\n        activeFile: {\r\n          ...state.activeFile,\r\n          loading: false,\r\n          error: action.error,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filesReducer;\r\n","export const SET_FILES = 'SET_FILES'\r\nexport const SET_LOADING_FILES = 'SET_LOADING_FILES'\r\nexport const GET_FILES_ERROR = 'GET_FILES_ERROR'\r\n\r\nexport const SET_LOADING_CONTENTS = 'SET_LOADING_CONTENTS'\r\nexport const GET_CONTENTS_SUCCESS = 'GET_CONTENTS_SUCCESS'\r\nexport const GET_CONTENTS_ERROR = 'GET_CONTENTS_ERROR'\r\n\r\n\r\nexport const SET_MODAL_OPEN = 'SET_MODAL_OPEN'\r\nexport const SET_ALERT_SHOWN = 'SET_ALERT_SHOWN'\r\n\r\n","import { SET_MODAL_OPEN, SET_ALERT_SHOWN } from \"../actions/actionTypes\";\r\nimport { ModalActionTypes } from \"../actions/modalActions\";\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  alert: false,\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst modalReducer = (state = initialState, action: ModalActionTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case SET_MODAL_OPEN:\r\n      return { ...state, isOpen: action.isOpen };\r\n    case SET_ALERT_SHOWN:\r\n      return { ...state, alert: action.isShown };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport filesReducer from \"./filesReducer\";\r\nimport modalReducer from \"./modalReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  files: filesReducer,\r\n  modal: modalReducer\r\n});\r\n\r\nexport type RootReducerType = typeof rootReducer;\r\n// получаем возвращаемый тип нашего State из rootReducer-a\r\nexport type RootStateType = ReturnType<RootReducerType>\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nconst composeEnhancers =\r\n// @ts-ignore\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  // @ts-ignore\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from  \"./HomePage.module.css\";\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.HomePage}>\r\n        <Link to=\"/modal\">Задание 1 (диалоговое окно)</Link>\r\n        <Link to=\"/test\">Задание 2 (DropDowns)</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styles from  './Navbar.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={styles.Navbar}>\r\n            <span className={styles.logo}><Link to='/'>LOGO</Link></span>\r\n            <ul>\r\n              <li><Link to='/modal'>Modal</Link></li>\r\n              <li><Link to='/test'>DropDowns</Link></li>\r\n              <li><Link to='/login' >Войти</Link></li>\r\n              <li><Link to='/register'>Регистрация</Link></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Page not Found</h1>\r\n      <span>Please, go to </span>\r\n      <Link to=\"/\">HomePage</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react'\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react'\r\n\r\nconst Register = () => {\r\n    return (\r\n        <div>\r\n            <h1>Register</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from \"react\";\r\nimport styles from './FileContents.module.css'\r\nimport { FileType } from \"../../types\";\r\n\r\ntype Props = {\r\n  activeFile: FileType | null | undefined, \r\n  loading: boolean, \r\n  error: any\r\n}\r\n\r\nconst FileContents: React.FC<Props> = ({ activeFile, loading, error }) => {\r\n  const contents = loading\r\n    ? \"Loading...\"\r\n    : error\r\n    ? `Ошибка загрузки: ${error}`\r\n    : activeFile\r\n    ? activeFile.contents\r\n    : 'Выберите файл';\r\n\r\n  return (\r\n    <div className={styles.contents}>\r\n      <p>{contents}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileContents;\r\n","import { RootStateType } from './../reducers/rootReducer';\r\nimport { FileType } from './../../types';\r\nimport {\r\n  SET_FILES,\r\n  SET_LOADING_FILES,\r\n  GET_FILES_ERROR,\r\n  SET_LOADING_CONTENTS,\r\n  GET_CONTENTS_SUCCESS,\r\n  GET_CONTENTS_ERROR,\r\n} from \"./actionTypes\";\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\nconst FAKE_DATABASE = {\r\n  contents: [\r\n    {\r\n      id: 1,\r\n      name: \"file1\",\r\n      contents: `Повседневная практика показывает, что начало повседневной работы по\r\n    формированию позиции в значительной степени обуславливает создание\r\n    систем массового участия. Идейные соображения высшего порядка, а\r\n    также сложившаяся структура организации требуют определения и\r\n    уточнения новых предложений. Товарищи! рамки и место обучения кадров\r\n    позволяет оценить значение форм развития.`,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"file2\",\r\n      contents: `Товарищи! начало повседневной работы по формированию позиции\r\n    представляет собой интересный эксперимент проверки форм развития.\r\n    Идейные соображения высшего порядка, а также начало повседневной\r\n    работы по формированию позиции влечет за собой процесс внедрения и\r\n    модернизации существенных финансовых и административных условий.\r\n    Идейные соображения высшего порядка, а также укрепление и развитие\r\n    структуры способствует подготовки и реализации систем массового\r\n    участия. Значимость этих проблем настолько очевидна, что\r\n    консультация с широким активом влечет за собой процесс внедрения и\r\n    модернизации дальнейших направлений развития.`,\r\n    },\r\n  ] as Array<FileType>,\r\n  files: [\r\n    {\r\n      id: 1,\r\n      name: \"file1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"file2\",\r\n    },\r\n  ] as Array<FileType>,\r\n};\r\n\r\nexport const getFiles = (): ThunkAction<Promise<void>, RootStateType, unknown, FileActionTypes> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoadingFiles());\r\n    try {\r\n      // axios-запрос по какому-то API\r\n      // const result = await axios.get(url, body)\r\n      const files = FAKE_DATABASE.files;\r\n      setTimeout(() => {\r\n        dispatch(setFiles(files));\r\n      }, 2000);\r\n    } catch (error) {\r\n      getFilesError(error.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getContents = (fileName: string): ThunkAction<Promise<void>, RootStateType, unknown, FileActionTypes> => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoadingContents());\r\n\r\n    try {\r\n      // axios-запрос по какому-то API\r\n      // const result = await axios.get(url, body)\r\n      const file = FAKE_DATABASE.contents.find(\r\n        ({ name }) => name === fileName\r\n      );\r\n        \r\n        setTimeout(() => dispatch(getContentsSuccess(file)), 1000);\r\n    } catch (error) {\r\n      dispatch(getContentsError(error.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport type FileActionTypes = (SetLoadingContentsActionType | GetContentsSuccessActionType | GetContentsErrorActionType |\r\n  SetFilesActionType | SetLoadingFilesActionType | GetFilesErrorActionType)\r\n\r\ntype SetLoadingContentsActionType = { type: typeof SET_LOADING_CONTENTS };\r\nexport const setLoadingContents = (): SetLoadingContentsActionType => {\r\n  return { type: SET_LOADING_CONTENTS };\r\n};\r\n\r\ntype GetContentsSuccessActionType = {\r\n  type: typeof GET_CONTENTS_SUCCESS;\r\n  file?: FileType;\r\n};\r\nexport const getContentsSuccess = (file: FileType | undefined): GetContentsSuccessActionType => {\r\n  return { type: GET_CONTENTS_SUCCESS, file };\r\n}; \r\n\r\ntype GetContentsErrorActionType = { type: typeof GET_CONTENTS_ERROR, error: any }\r\nexport const getContentsError = (error: any): GetContentsErrorActionType => {\r\n  return { type: GET_CONTENTS_ERROR, error };\r\n};\r\n\r\ntype SetFilesActionType = { type: typeof SET_FILES, files: Array<FileType> }\r\nexport const setFiles = (files: Array<FileType>): SetFilesActionType => {\r\n  return { type: SET_FILES, files };\r\n};\r\n\r\ntype SetLoadingFilesActionType = { type: typeof SET_LOADING_FILES }\r\nexport const setLoadingFiles = (): SetLoadingFilesActionType => {\r\n  return { type: SET_LOADING_FILES };\r\n};\r\n\r\ntype GetFilesErrorActionType = { type: typeof GET_FILES_ERROR, error: any }\r\nexport const getFilesError = (error: any): GetFilesErrorActionType => {\r\n  return { type: GET_FILES_ERROR, error };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport FileContents from \"../FileContents/FileContents\";\r\nimport { getContents } from \"../../redux/actions/filesActions\";\r\nimport styles from './DropDowns.module.css'\r\nimport { RootStateType } from \"../../redux/reducers/rootReducer\";\r\n\r\ntype OwnProps = {\r\n  url: string,\r\n  match: any\r\n}\r\n\r\ntype Props = MapStateToPropsType & MapDispatchToPropsType & OwnProps\r\n\r\nclass DropDowns extends Component<Props> {\r\n  componentDidMount() {\r\n    this.props.getContents(this.props.match.params.file);\r\n  }\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.match.params.file !== prevProps.match.params.file)\r\n      this.props.getContents(this.props.match.params.file);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { url, files, activeFile, loading, error } = this.props;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.dropdown}>\r\n          <button className={styles[\"show-btn\"]}>\r\n            {(activeFile && `Выбран ${activeFile.name}`) || \"Выбери файл\"}\r\n          </button>\r\n          <div className={styles[\"dropdown-child\"]}>\r\n            {files.map((file) => (\r\n              <Link to={`${url}/${file.name}`} key={file.id}>\r\n                {file.name}\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={styles.dropdown}>\r\n          <button className={styles[\"show-btn\"]}>\r\n            Содержимое файла {activeFile && activeFile.name}\r\n          </button>\r\n\r\n          <FileContents {...{ activeFile, loading, error }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n  return {\r\n    files: state.files.files,\r\n    activeFile: state.files.activeFile.file,\r\n    loading: state.files.activeFile.loading,\r\n    error: state.files.activeFile.error,\r\n  };\r\n};\r\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchToPropsType = { getContents: typeof getContents }\r\n\r\n// @ts-ignore\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, OwnProps, RootStateType>(mapStateToProps, { getContents })(DropDowns);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect, match } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from  \"./TestPage.module.css\";\r\nimport DropDowns from \"../../components/DropDowns/DropDowns\";\r\nimport { getFiles } from \"../../redux/actions/filesActions\";\r\nimport { RootStateType } from \"../../redux/reducers/rootReducer\";\r\n\r\ntype Props = {\r\n  loading: boolean, \r\n  error: any, \r\n  match: match,\r\n  getFiles: typeof getFiles\r\n}\r\n\r\nclass TestPage extends Component<Props> {\r\n  componentDidMount() {\r\n    this.props.getFiles();\r\n  }\r\n  render() {\r\n    const {loading, error, match} = this.props\r\n    const { url, path } = match;\r\n\r\n    if (loading) {\r\n      return <h1>Loading...</h1>;\r\n    }\r\n    if (error) {\r\n      return <h1>Что-то пошло не так... Ошибка: {error}</h1>\r\n    }\r\n    return (\r\n      <div className={styles.TestPage}>\r\n        <h1>Тестовое Задание (DropDowns)</h1>\r\n\r\n        <Switch>\r\n          <Route\r\n            path={`${path}/:file?`}\r\n            render={(routeProps) => (\r\n              <DropDowns url={url} {...routeProps} />\r\n            )}\r\n          />\r\n          <Redirect to={`${path}`} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n  return {\r\n    loading: state.files.loading,\r\n    error: state.files.error,\r\n  };\r\n};\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, { getFiles })(TestPage);\r\n","import React from \"react\";\r\nimport styles from './Modal.module.css'\r\n\r\ntype Props = {\r\n  modalOkClickHandler: () => void\r\n  modalDismissClickHandler: () => void\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ modalOkClickHandler, modalDismissClickHandler }) => {\r\n\r\n  return (\r\n    <div className={styles.Modal}>\r\n      <h3>Нужно показать Alert?</h3>\r\n      <button onClick={modalOkClickHandler}>ОК</button>\r\n      <button onClick={modalDismissClickHandler}>Отмена</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react'\r\nimport styles from './Alert.module.css'\r\n\r\ntype Props = {\r\n    onCloseAlert: () => void\r\n}\r\n\r\nconst Alert: React.FC<Props> = ({onCloseAlert}) => {\r\n    return (\r\n        <div className={styles.Alert}>\r\n            <p>OK</p>\r\n            <span onClick={onCloseAlert} className={styles['close-btn']}>x</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from  \"./ModalPage.module.css\";\r\nimport transition from '../../transitions/transition.module.css'\r\n\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport Alert from \"../../components/Modal/Alert\";\r\nimport { setAlert, setModal } from \"../../redux/actions/modalActions\";\r\nimport { RootStateType } from \"../../redux/reducers/rootReducer\";\r\n\r\ntype Props = {\r\n  setModal: typeof setModal, \r\n  setAlert: typeof setAlert\r\n} & MapStateToPropsType\r\n\r\nclass ModalPage extends Component<Props> {\r\n\r\n  modalOkClickHandler = () => {\r\n    this.props.setModal(false)\r\n    this.props.setAlert(true)\r\n  };\r\n\r\n  modalDismissClickHandler = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const {isOpen, isShown, setModal, setAlert} = this.props\r\n    return (\r\n      <div className={styles.ModalPage}>\r\n        <button onClick={() => setModal(true)}>Нажми на меня</button>\r\n        <CSSTransition\r\n          in={isOpen}\r\n          timeout={200}\r\n          classNames={transition}\r\n          unmountOnExit\r\n          mountOnEnter\r\n        >\r\n          <Modal\r\n            modalOkClickHandler={this.modalOkClickHandler}\r\n            modalDismissClickHandler={() => setModal(false)}\r\n          />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={isShown}\r\n          timeout={200}\r\n          classNames={transition}\r\n          unmountOnExit\r\n          mountOnEnter\r\n        >\r\n          <Alert\r\n            onCloseAlert={() => setAlert(false)}\r\n           />\r\n        </CSSTransition>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n  return {\r\n    isOpen: state.modal.isOpen,\r\n    isShown: state.modal.alert\r\n  };\r\n};\r\n\r\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\nexport default connect(mapStateToProps, { setAlert, setModal })(ModalPage);\r\n","import { SET_MODAL_OPEN, SET_ALERT_SHOWN } from \"./actionTypes\";\r\n\r\nexport type ModalActionTypes = SetModalActionType | SetAlertActionType;\r\n\r\ntype SetModalActionType = { type: typeof SET_MODAL_OPEN; isOpen: boolean };\r\nexport const setModal = (isOpen: boolean): SetModalActionType => {\r\n  return {\r\n    type: SET_MODAL_OPEN,\r\n    isOpen,\r\n  };\r\n};\r\n\r\ntype SetAlertActionType = { type: typeof SET_ALERT_SHOWN; isShown: boolean };\r\nexport const setAlert = (isShown: boolean): SetAlertActionType => {\r\n  return {\r\n    type: SET_ALERT_SHOWN,\r\n    isShown,\r\n  };\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport HomePage from \"../../pages/HomePage/HomePage\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport styles from  \"./Layout.module.css\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport NotFound from \"../NotFound/NotFound\";\r\nimport Login from \"../../pages/LoginPage/Login\";\r\nimport Register from \"../../pages/RegisterPage/Register\";\r\nimport TestPage from \"../../pages/TestPage/TestPage\";\r\nimport ModalPage from \"../../pages/ModalPage/ModalPage\";\r\n\r\nexport default class Layout extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Navbar />\r\n        <div className={styles.Layout}>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/test\" component={TestPage} />\r\n            <Route path=\"/modal\" component={ModalPage} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport ErrorBoundary from \"./components/ErrorBoundary/ErrorBoundary\";\nimport store from \"./redux/store\";\nimport Layout from \"./components/Layout/Layout\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <ErrorBoundary>\n          <Layout />\n        </ErrorBoundary>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}